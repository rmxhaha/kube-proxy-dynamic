// Code generated by protoc-gen-go. DO NOT EDIT.
// source: loadexchange.proto

/*
Package loadexchange is a generated protocol buffer package.

It is generated from these files:
	loadexchange.proto

It has these top-level messages:
	PodLoads
	PodLoad
	PodSelector
*/
package loadexchange

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Load Information
type PodLoads struct {
	RecordTime *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=recordTime" json:"recordTime,omitempty"`
	PodLoads   []*PodLoad                 `protobuf:"bytes,2,rep,name=podLoads" json:"podLoads,omitempty"`
}

func (m *PodLoads) Reset()                    { *m = PodLoads{} }
func (m *PodLoads) String() string            { return proto.CompactTextString(m) }
func (*PodLoads) ProtoMessage()               {}
func (*PodLoads) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PodLoads) GetRecordTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.RecordTime
	}
	return nil
}

func (m *PodLoads) GetPodLoads() []*PodLoad {
	if m != nil {
		return m.PodLoads
	}
	return nil
}

type PodLoad struct {
	PodIP []byte `protobuf:"bytes,1,opt,name=PodIP,proto3" json:"PodIP,omitempty"`
	Load  uint32 `protobuf:"varint,2,opt,name=load" json:"load,omitempty"`
}

func (m *PodLoad) Reset()                    { *m = PodLoad{} }
func (m *PodLoad) String() string            { return proto.CompactTextString(m) }
func (*PodLoad) ProtoMessage()               {}
func (*PodLoad) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PodLoad) GetPodIP() []byte {
	if m != nil {
		return m.PodIP
	}
	return nil
}

func (m *PodLoad) GetLoad() uint32 {
	if m != nil {
		return m.Load
	}
	return 0
}

// Currently only support select all
type PodSelector struct {
}

func (m *PodSelector) Reset()                    { *m = PodSelector{} }
func (m *PodSelector) String() string            { return proto.CompactTextString(m) }
func (*PodSelector) ProtoMessage()               {}
func (*PodSelector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*PodLoads)(nil), "loadexchange.PodLoads")
	proto.RegisterType((*PodLoad)(nil), "loadexchange.PodLoad")
	proto.RegisterType((*PodSelector)(nil), "loadexchange.PodSelector")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LoadExchange service

type LoadExchangeClient interface {
	// Get load information
	GetPodLoads(ctx context.Context, in *PodSelector, opts ...grpc.CallOption) (LoadExchange_GetPodLoadsClient, error)
}

type loadExchangeClient struct {
	cc *grpc.ClientConn
}

func NewLoadExchangeClient(cc *grpc.ClientConn) LoadExchangeClient {
	return &loadExchangeClient{cc}
}

func (c *loadExchangeClient) GetPodLoads(ctx context.Context, in *PodSelector, opts ...grpc.CallOption) (LoadExchange_GetPodLoadsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LoadExchange_serviceDesc.Streams[0], c.cc, "/loadexchange.LoadExchange/GetPodLoads", opts...)
	if err != nil {
		return nil, err
	}
	x := &loadExchangeGetPodLoadsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LoadExchange_GetPodLoadsClient interface {
	Recv() (*PodLoads, error)
	grpc.ClientStream
}

type loadExchangeGetPodLoadsClient struct {
	grpc.ClientStream
}

func (x *loadExchangeGetPodLoadsClient) Recv() (*PodLoads, error) {
	m := new(PodLoads)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for LoadExchange service

type LoadExchangeServer interface {
	// Get load information
	GetPodLoads(*PodSelector, LoadExchange_GetPodLoadsServer) error
}

func RegisterLoadExchangeServer(s *grpc.Server, srv LoadExchangeServer) {
	s.RegisterService(&_LoadExchange_serviceDesc, srv)
}

func _LoadExchange_GetPodLoads_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PodSelector)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LoadExchangeServer).GetPodLoads(m, &loadExchangeGetPodLoadsServer{stream})
}

type LoadExchange_GetPodLoadsServer interface {
	Send(*PodLoads) error
	grpc.ServerStream
}

type loadExchangeGetPodLoadsServer struct {
	grpc.ServerStream
}

func (x *loadExchangeGetPodLoadsServer) Send(m *PodLoads) error {
	return x.ServerStream.SendMsg(m)
}

var _LoadExchange_serviceDesc = grpc.ServiceDesc{
	ServiceName: "loadexchange.LoadExchange",
	HandlerType: (*LoadExchangeServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPodLoads",
			Handler:       _LoadExchange_GetPodLoads_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "loadexchange.proto",
}

func init() { proto.RegisterFile("loadexchange.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x4f, 0x4f, 0x84, 0x30,
	0x14, 0xc4, 0x65, 0xfd, 0xb7, 0x79, 0xb0, 0x97, 0x17, 0x35, 0xc8, 0x45, 0xc2, 0x89, 0x53, 0x57,
	0xd9, 0x9b, 0x67, 0x8d, 0x31, 0xf1, 0x40, 0x2a, 0x5f, 0xa0, 0x4b, 0x9f, 0xb8, 0x09, 0xf8, 0x48,
	0xa9, 0x89, 0x7e, 0x7b, 0xb3, 0xa5, 0x6c, 0x30, 0x7a, 0x6b, 0xa7, 0xd3, 0xdf, 0xcc, 0x00, 0xb6,
	0xac, 0x34, 0x7d, 0xd5, 0xef, 0xea, 0xa3, 0x21, 0xd1, 0x1b, 0xb6, 0x8c, 0xd1, 0x5c, 0x4b, 0x6e,
	0x1a, 0xe6, 0xa6, 0xa5, 0xb5, 0x7b, 0xdb, 0x7e, 0xbe, 0xad, 0xed, 0xae, 0xa3, 0xc1, 0xaa, 0xae,
	0x1f, 0xed, 0xd9, 0x37, 0x2c, 0x4b, 0xd6, 0x2f, 0xac, 0xf4, 0x80, 0xf7, 0x00, 0x86, 0x6a, 0x36,
	0xba, 0xda, 0x75, 0x14, 0x07, 0x69, 0x90, 0x87, 0x45, 0x22, 0x46, 0x82, 0x98, 0x08, 0xa2, 0x9a,
	0x08, 0x72, 0xe6, 0xc6, 0x3b, 0x58, 0xf6, 0x9e, 0x13, 0x2f, 0xd2, 0xe3, 0x3c, 0x2c, 0x2e, 0xc5,
	0xaf, 0x76, 0x3e, 0x45, 0x1e, 0x6c, 0xd9, 0x06, 0xce, 0xbd, 0x88, 0x17, 0x70, 0x5a, 0xb2, 0x7e,
	0x2e, 0x5d, 0x68, 0x24, 0xc7, 0x0b, 0x22, 0x9c, 0xec, 0x11, 0xf1, 0x22, 0x0d, 0xf2, 0x95, 0x74,
	0xe7, 0x6c, 0x05, 0x61, 0xc9, 0xfa, 0x95, 0x5a, 0xaa, 0x2d, 0x9b, 0xa2, 0x82, 0x68, 0x0f, 0x78,
	0xf4, 0x29, 0xf8, 0x00, 0xe1, 0x13, 0xd9, 0xc3, 0xa2, 0xeb, 0x3f, 0x1d, 0xa6, 0x9f, 0xc9, 0xd5,
	0xbf, 0xf5, 0x86, 0xec, 0xe8, 0x36, 0xd8, 0x9e, 0xb9, 0xb1, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xb5, 0x1f, 0x8d, 0x7c, 0x60, 0x01, 0x00, 0x00,
}
